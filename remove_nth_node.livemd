# Untitled notebook

## Section

```elixir
# Definition for singly-linked list.
#
defmodule ListNode do
  @type t :: %__MODULE__{
          val: integer,
          next: ListNode.t()
        }
  defstruct val: 0, next: nil
end
```

```elixir
defmodule Solution do
  @spec largest_number(nums :: [integer]) :: String.t()
  def largest_number(nums) do
    nums |> Enum.map(&to_string/1)
  end

  def sort(list) do
  end
end

Solution.largest_number([3, 30, 34, 5, 9])
IO.puts("Hello There!ğŸ‘‹")
```
